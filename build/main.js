!function(){"use strict";var e=function(e){return"Escape"===e.code};function t(e){return Math.floor(Math.random()*e)}function n(t,n){e(n)&&o(t)}function r(e){e.classList.remove("hidden"),document.addEventListener("keydown",n.bind(this,e))}function o(e){e.classList.add("hidden"),document.removeEventListener("keydown",n),document.body.classList.remove("modal-open")}function c(e,t){e.forEach((function(e){return e.classList.remove("img-filters__button--active")})),t.classList.add("img-filters__button--active")}var i=200;function a(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:l,n=new XMLHttpRequest;n.responseType="json";var r="https://javascript.pages.academy/kekstagram/data";n.responseType="json",n.addEventListener("load",(function(){n.status===i?e(n.response):t("Запрос не удался: ".concat(n.statusText))})),n.addEventListener("error",(function(){t("Ошибка соединения")})),n.addEventListener("timeout",(function(){t("Сервер не отвеает в течение ".concat(n.timeout," мс"))})),n.timeout=1e4,n.open("GET",r),n.send()}function l(t){var n=document.querySelector("#error").content.querySelector(".error").cloneNode(!0);n.querySelector(".error__title").textContent=t,n.querySelector(".error__button").addEventListener("click",(function(){n.remove(),resetToDefault()})),document.addEventListener("keydown",(function(t){e(t)&&n.querySelector(".error__button").click(),resetToDefault()}),{once:!0}),document.body.append(n)}function u(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function s(e,t){var n;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(n=function(e,t){if(e){if("string"==typeof e)return u(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?u(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0,o=function(){};return{s:o,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var c,i=!0,a=!1;return{s:function(){n=e[Symbol.iterator]()},n:function(){var e=n.next();return i=e.done,e},e:function(e){a=!0,c=e},f:function(){try{i||null==n.return||n.return()}finally{if(a)throw c}}}}var d,f,m=document.querySelector(".pictures"),v=document.querySelector(".img-filters"),y=(document.querySelector(".comments-loader"),document.querySelector(".big-picture")),p=y.querySelector(".big-picture__img img"),_=y.querySelector(".big-picture__cancel"),g=y.querySelector(".likes-count"),h=y.querySelector(".social__caption"),S=document.querySelector(".social__comments"),q=S.children,L=y.querySelector(".social__comment-count"),b=(y.querySelector(".comments-count"),document.querySelectorAll(".social__text"),y.querySelector(".social__picture")),E=y.querySelector(".social__comments-loader"),w=y.querySelector(".social__footer-text"),k=y.querySelector(".social__footer-btn"),x=document.querySelector("#comment").content.querySelector(".social__comment"),C=document.querySelector("#picture").content.querySelector(".picture");function V(){for(;m.querySelectorAll(".picture")[0];)m.querySelectorAll(".picture")[0].remove()}function A(e){var t=C.cloneNode(!0);return t.querySelector(".picture__img").src=e.url,t.querySelector(".picture__likes").textContent=e.likes,t.querySelector(".picture__comments").textContent=e.comments.length,t.addEventListener("click",(function(t){r(y),document.body.classList.add("modal-open"),function(e,t){f=e.target,d=t.comments.length,function(e){p.src=e.url,g.textContent=e.likes,h.textContent=e.description,b.src="img/avatar-".concat(Math.ceil(6*Math.random()),".svg"),E.classList.remove("hidden"),T()}(t),function(e){for(;e[0];)e[0].remove()}(q),function(e,t){var n=document.createDocumentFragment();e.comments.forEach((function(e,t){t>4?n.appendChild(M(e,t)):n.appendChild(M(e))})),t.append(n)}(t,S)}(t,e)})),t}function j(e){var t,n=document.createDocumentFragment(),r=s(e);try{for(r.s();!(t=r.n()).done;){var o=t.value;n.appendChild(A(o))}}catch(e){r.e(e)}finally{r.f()}m.appendChild(n),v.classList.remove("img-filters--inactive")}function T(){L.textContent=d>4?"5 из ".concat(d," комментариев"):"".concat(d,1===d?" комментарий":" комментария")}function M(e,t){var n=x.cloneNode(!0);return n.querySelector(".social__picture").src=e.avatar,n.querySelector(".social__text").textContent=e.message,t&&n.classList.add("hidden"),n}function R(e,t){X["filter-default"].find((function(e){return f.src.match(/\d+\.jpg$/)[0]===e.url.match(/\d+\.jpg$/)[0]})).comments.unshift({avatar:e,message:t}),V(),j(X[O])}_.addEventListener("click",(function(){o(y)})),E.addEventListener("click",(function(){var e,t=s(q);try{for(t.s();!(e=t.n()).done;){e.value.classList.remove("hidden")}}catch(e){t.e(e)}finally{t.f()}E.classList.add("hidden")})),k.addEventListener("click",(function(){var e,t;e=R,t="img/avatar-".concat(Math.ceil(6*Math.random()),".svg"),S.insertAdjacentElement("afterbegin",M({message:w.value,avatar:t})),d+=1,e(t,w.value),w.value="",T()})),a(j);var D=document.querySelector("#filter-default"),I=document.querySelector("#filter-random"),U=document.querySelector("#filter-discussed"),W=(document.querySelector(".pictures").querySelectorAll(".pictures"),document.querySelectorAll(".img-filters__button")),O="filter-default",X={"filter-default":[]};U.addEventListener("click",(function(e){O=e.target.id,V(),c(W,U),j(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:X["filter-default"],t=e.slice(),n=t.sort((function(e,t){return t.comments.length-e.comments.length}));return X["filter-discussed"]=n}())})),D.addEventListener("click",(function(e){O=e.target.id,V(),c(W,D),j(X["filter-default"])}));var F,N,P,$=(F=function(e){O=e.target.id,V(),c(W,I),j(function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:X["filter-default"],n=[],r=function(){var e=t(25);n.some((function(t){return t===e}))||n.push(e)};n.length<10;)r();var o=n.map((function(t){return e[t]}));return X["filter-random"]=o}())},N=300,function(){function e(){P=null}var t=!P;clearTimeout(P),P=setTimeout(e,N),t&&F(arguments[0])});I.addEventListener("click",$),a((function(e){return X["filter-default"]=e}));var B,H,G,z,J=document.querySelector(".img-upload"),K=J.querySelector("#upload-file"),Q=J.querySelector("form"),Y=J.querySelector(".img-upload__overlay"),Z=J.querySelector(".img-upload__input"),ee=J.querySelector(".img-upload__cancel"),te=J.querySelector(".img-upload__preview"),ne=J.querySelector(".img-upload__preview img"),re=J.querySelector(".scale__control--smaller"),oe=J.querySelector(".scale__control--bigger"),ce=J.querySelector(".scale__control--value"),ie=J.querySelectorAll(".effects__preview"),ae=J.querySelector(".effect-level"),le=J.querySelector(".effect-level__value"),ue=J.querySelector(".effects__list"),se=(J.querySelector("input[checked]"),J.querySelector(".effect-level__depth")),de=document.querySelector(".effect-level__line"),fe=J.querySelector(".effect-level__pin"),me=J.querySelector(".text__hashtags"),ve={chrome:"effects__preview--chrome",sepia:"effects__preview--sepia",marvin:"effects__preview--marvin",phobos:"effects__preview--phobos",heat:"effects__preview--heat"},ye={chrome:"grayscale",sepia:"sepia",marvin:"invert",phobos:"blur",heat:"brightness"},pe={chrome:function(e){var t=e/de.offsetWidth;te.style.filter="".concat(G,"(").concat(t,")")},sepia:function(e){var t=e/de.offsetWidth;te.style.filter="".concat(G,"(").concat(t,")")},marvin:function(e){var t="".concat(e/de.offsetWidth*100,"%");te.style.filter="".concat(G,"(").concat(t,")")},phobos:function(e){var t="".concat(3*e/de.offsetWidth,"px");te.style.filter="".concat(G,"(").concat(t,")")},heat:function(e){var t=1+2*e/de.offsetWidth;te.style.filter="".concat(G,"(").concat(t,")")}},_e=function(e){var t=parseInt(e)/100;te.style.transform="scale(".concat(t,")")};function ge(){B&&te.classList.remove(B),H&&"none"!==H.value?(ae.classList.remove("hidden"),le.value=100):(ae.classList.add("hidden"),le.value=0),fe.style.left="100%",se.style.width="100%",te.style.filter="",te.style.transform="scale(1)",ce.value="100%",me.style.outline=""}oe.addEventListener("click",(function(){var e,t;e=_e,(t=parseInt(ce.value))<100&&(ce.value="".concat(t+25,"%")),e(ce.value)})),re.addEventListener("click",(function(){var e,t;e=_e,(t=parseInt(ce.value))>25&&(ce.value="".concat(t-25,"%")),e(ce.value)})),ue.addEventListener("change",(function(e){H=e.target,ge(),G=ye[e.target.value],z=pe[e.target.value],(B=ve[e.target.value])&&te.classList.add(B)})),K.addEventListener("change",(function(){ge(),r(Y),function(){var e=Z.files[0];ne.src=URL.createObjectURL(e);var t,n=s(ie);try{for(n.s();!(t=n.n()).done;){t.value.style.backgroundImage="url('".concat(URL.createObjectURL(e),"')")}}catch(e){n.e(e)}finally{n.f()}}()})),ee.addEventListener("click",(function(){o(Y),function(){var e,t=Z.files[0],n=s(ie);try{for(n.s();!(e=n.n()).done;){e.value.style.backgroundImage="url('".concat(URL.revokeObjectURL(t),"')")}}catch(e){n.e(e)}finally{n.f()}}()})),fe.addEventListener("mousedown",(function(e){!function(e,t){e.preventDefault();var n=e.clientX-fe.getBoundingClientRect().left;function r(e){e.preventDefault();var r=e.clientX-n-de.getBoundingClientRect().left;r<0&&(r=0);var o=de.offsetWidth;r>o&&(r=o),fe.style.left="".concat(r,"px"),se.style.width="".concat(r,"px");var c=r/de.offsetWidth*100;le.value=Math.round(c),t&&t(r)}document.addEventListener("mousemove",r),document.addEventListener("mouseup",(function e(){document.removeEventListener("mousemove",r),document.removeEventListener("mouseup",e)})),fe.ondragstart=function(){return!1}}(e,z)})),Q.addEventListener("submit",(function(e){e.preventDefault(),function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:l,r=new XMLHttpRequest,o="https://javascript.pages.academy/kekstagram";r.addEventListener("load",(function(){r.status===i?t():n("Запрос не удался: ".concat(r.statusText))})),r.addEventListener("error",(function(){l("Ошибка соединения")})),r.addEventListener("timeout",(function(){n("Сервер не отвеает в течение ".concat(r.timeout," мс"))})),r.timeout=1e4,r.open("POST",o),r.send(e)}(new FormData(Q),(function(){o(Y),ge(),Q.reset()}))})),le.setAttribute("value",0),ce.setAttribute("value","100"),o(ae);var he=document.querySelector(".img-upload"),Se=he.querySelector(".text__hashtags"),qe=he.querySelector(".text__description");he.querySelector(".img-upload__submit").addEventListener("click",(function(){var e;!function(e){var t=e.value,n=t.match(/(#[^#\s]{1,19})/g),r=function(e,t){return e.test(t)};if(r(/(?<!\w)#(?!\w)/,t)?(e.setCustomValidity("Хеш-тег не может состоять только из одной решётки"),e.reportValidity(),e.style.outline="3px solid red"):r(/[^#\w\s]{1,}(?=.*)|((?<!#)(\b\w{1,19}\b ?){1,5})/,t)?(e.setCustomValidity("Хеш-тег начинается c решетшки"),e.reportValidity(),e.style.outline="3px solid red"):r(/(#\w{1,19}#\w*){1,5}/,t)?(e.setCustomValidity("Хэш-теги разделяются пробелами"),e.reportValidity(),e.style.outline="3px solid red"):r(/((?<=\s)#(?!\w))/,t)?(console.log("ssd"),e.setCustomValidity("Хеш-тег не может состоять только из одной решётки;"),e.reportValidity(),e.style.outline="3px solid red"):r(/(#[^#\s]{1,19} ?){6,}/,t)?(e.setCustomValidity("Нельзя указать больше пяти хэш-тегов"),e.reportValidity(),e.style.outline="3px solid red"):r(/(#[^#\s]{20,} ?)/,t)?(e.setCustomValidity("Максимальная длина одного хэш-тега может быть 20 символов, включая решётку"),e.reportValidity(),e.style.outline="3px solid red"):(e.setCustomValidity(""),e.reportValidity(),e.style.outline=""),n){var o,c=n.toString().toLowerCase().split(","),i=s(c);try{for(i.s();!(o=i.n()).done;){for(var a=o.value,l=0,u=0;u<c.length;u++)a===c[u]&&l++;l>1&&(e.setCustomValidity("Один и тот же хэш-тег не может быть использован дважды"),e.reportValidity(),e.style.outline="3px solid red")}}catch(e){i.e(e)}finally{i.f()}}}(Se),(e=qe).validity.tooLong?(e.setCustomValidity("длина комментария не может составлять больше 140 символов"),e.style.outline="3px solid red"):(e.setCustomValidity(""),e.style.outline="")})),Se.addEventListener("keydown",(function(e){e.stopPropagation()})),qe.addEventListener("keydown",(function(e){e.stopPropagation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
