!function(e){"use strict";var t=function(e){return"Escape"===e.code};function n(e){return Math.floor(Math.random()*e)}function r(e,n){t(n)&&c(e)}function o(e){e.classList.remove("hidden"),document.addEventListener("keydown",r.bind(this,e))}function c(e){e.classList.add("hidden"),document.removeEventListener("keydown",r),document.body.classList.remove("modal-open")}function i(e,t){e.forEach((function(e){return e.classList.remove("img-filters__button--active")})),t.classList.add("img-filters__button--active")}var l=200;function a(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:u,n=new XMLHttpRequest;n.responseType="json";var r="https://javascript.pages.academy/kekstagram/data";n.responseType="json",n.addEventListener("load",(function(){n.status===l?e(n.response):t("Запрос не удался: ".concat(n.statusText))})),n.addEventListener("error",(function(){t("Ошибка соединения")})),n.addEventListener("timeout",(function(){t("Сервер не отвеает в течение ".concat(n.timeout," мс"))})),n.timeout=1e4,n.open("GET",r),n.send()}function u(e){var n=document.querySelector("#error").content.querySelector(".error").cloneNode(!0);n.querySelector(".error__title").textContent=e,n.querySelector(".error__button").addEventListener("click",(function(){n.remove(),resetToDefault()})),document.addEventListener("keydown",(function(e){t(e)&&n.querySelector(".error__button").click(),resetToDefault()}),{once:!0}),document.body.append(n)}function s(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function d(e,t){var n;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(n=function(e,t){if(e){if("string"==typeof e)return s(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?s(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0,o=function(){};return{s:o,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var c,i=!0,l=!1;return{s:function(){n=e[Symbol.iterator]()},n:function(){var e=n.next();return i=e.done,e},e:function(e){l=!0,c=e},f:function(){try{i||null==n.return||n.return()}finally{if(l)throw c}}}}var f={"filter-default":[]};var m,v,y=document.querySelector(".pictures"),p=document.querySelector(".img-filters"),_=(document.querySelector(".comments-loader"),document.querySelector(".big-picture")),h=_.querySelector(".big-picture__img img"),g=_.querySelector(".big-picture__cancel"),S=_.querySelector(".likes-count"),q=_.querySelector(".social__caption"),L=document.querySelector(".social__comments"),b=L.children,E=_.querySelector(".social__comment-count"),k=(_.querySelector(".comments-count"),document.querySelectorAll(".social__text"),_.querySelector(".social__picture")),w=_.querySelector(".social__comments-loader"),x=_.querySelector(".social__footer-text"),C=_.querySelector(".social__footer-btn"),V=document.querySelector("#comment").content.querySelector(".social__comment"),A=document.querySelector("#picture").content.querySelector(".picture");function j(){for(;y.querySelectorAll(".picture")[0];)y.querySelectorAll(".picture")[0].remove()}function I(e){var t=A.cloneNode(!0);return t.querySelector(".picture__img").src=e.url,t.querySelector(".picture__likes").textContent=e.likes,t.querySelector(".picture__comments").textContent=e.comments.length,t.addEventListener("click",(function(t){o(_),document.body.classList.add("modal-open"),function(e,t){v=e.target,m=t.comments.length,function(e){h.src=e.url,S.textContent=e.likes,q.textContent=e.description,k.src="img/avatar-".concat(Math.ceil(6*Math.random()),".svg"),w.classList.remove("hidden"),M()}(t),function(e){for(;e[0];)e[0].remove()}(b),function(e,t){var n=document.createDocumentFragment();e.comments.forEach((function(e,t){t>4?n.appendChild(R(e,t)):n.appendChild(R(e))})),t.append(n)}(t,L)}(t,e)})),t}function T(e){var t,n=document.createDocumentFragment(),r=d(e);try{for(r.s();!(t=r.n()).done;){var o=t.value;n.appendChild(I(o))}}catch(e){r.e(e)}finally{r.f()}y.appendChild(n),p.classList.remove("img-filters--inactive")}function M(){E.textContent=m>4?"5 из ".concat(m," комментариев"):"".concat(m,1===m?" комментарий":" комментария")}function R(e,t){var n=V.cloneNode(!0);return n.querySelector(".social__picture").src=e.avatar,n.querySelector(".social__text").textContent=e.message,t&&n.classList.add("hidden"),n}function D(t,n){f["filter-default"].find((function(e){return v.src.match(/\d+\.jpg$/)[0]===e.url.match(/\d+\.jpg$/)[0]})).comments.unshift({avatar:t,message:n}),j(),T(f[e.clickedFIlter])}g.addEventListener("click",(function(){c(_)})),w.addEventListener("click",(function(){var e,t=d(b);try{for(t.s();!(e=t.n()).done;){e.value.classList.remove("hidden")}}catch(e){t.e(e)}finally{t.f()}w.classList.add("hidden")})),C.addEventListener("click",(function(){var e,t;e=D,t="img/avatar-".concat(Math.ceil(6*Math.random()),".svg"),L.insertAdjacentElement("afterbegin",R({message:x.value,avatar:t})),m+=1,e(t,x.value),x.value="",M()}));var F,U,W,O,X=document.querySelector(".img-upload"),N=X.querySelector("#upload-file"),P=X.querySelector("form"),$=X.querySelector(".img-upload__overlay"),B=X.querySelector(".img-upload__input"),H=X.querySelector(".img-upload__cancel"),G=X.querySelector(".img-upload__preview"),z=X.querySelector(".img-upload__preview img"),J=X.querySelector(".scale__control--smaller"),K=X.querySelector(".scale__control--bigger"),Q=X.querySelector(".scale__control--value"),Y=X.querySelectorAll(".effects__preview"),Z=X.querySelector(".effect-level"),ee=X.querySelector(".effect-level__value"),te=X.querySelector(".effects__list"),ne=(X.querySelector("input[checked]"),X.querySelector(".effect-level__depth")),re=document.querySelector(".effect-level__line"),oe=X.querySelector(".effect-level__pin"),ce=X.querySelector(".text__hashtags"),ie={chrome:"effects__preview--chrome",sepia:"effects__preview--sepia",marvin:"effects__preview--marvin",phobos:"effects__preview--phobos",heat:"effects__preview--heat"},le={chrome:"grayscale",sepia:"sepia",marvin:"invert",phobos:"blur",heat:"brightness"},ae={chrome:function(e){var t=e/re.offsetWidth;G.style.filter="".concat(W,"(").concat(t,")")},sepia:function(e){var t=e/re.offsetWidth;G.style.filter="".concat(W,"(").concat(t,")")},marvin:function(e){var t=e/re.offsetWidth*100+"%";G.style.filter="".concat(W,"(").concat(t,")")},phobos:function(e){var t=3*e/re.offsetWidth+"px";G.style.filter="".concat(W,"(").concat(t,")")},heat:function(e){var t=1+2*e/re.offsetWidth;G.style.filter="".concat(W,"(").concat(t,")")}},ue=function(e){var t=parseInt(e)/100;G.style.transform="scale(".concat(t,")")};function se(){F&&G.classList.remove(F),U&&"none"!==U.value?(Z.classList.remove("hidden"),ee.value=100):(Z.classList.add("hidden"),ee.value=0),oe.style.left="100%",ne.style.width="100%",G.style.filter="",G.style.transform="scale(1)",Q.value="100%",ce.style.outline=""}K.addEventListener("click",(function(){var e,t;e=ue,(t=parseInt(Q.value))<100&&(Q.value=t+25+"%"),e(Q.value)})),J.addEventListener("click",(function(){var e,t;e=ue,(t=parseInt(Q.value))>25&&(Q.value=t-25+"%"),e(Q.value)})),te.addEventListener("change",(function(e){U=e.target,se(),W=le[e.target.value],O=ae[e.target.value],(F=ie[e.target.value])&&G.classList.add(F)})),N.addEventListener("change",(function(){se(),o($),function(){var e=B.files[0];z.src=URL.createObjectURL(e);var t,n=d(Y);try{for(n.s();!(t=n.n()).done;){t.value.style.backgroundImage="url('".concat(URL.createObjectURL(e),"')")}}catch(e){n.e(e)}finally{n.f()}}()})),H.addEventListener("click",(function(){c($),function(){var e,t=B.files[0],n=d(Y);try{for(n.s();!(e=n.n()).done;){e.value.style.backgroundImage="url('".concat(URL.revokeObjectURL(t),"')")}}catch(e){n.e(e)}finally{n.f()}}()})),oe.addEventListener("mousedown",(function(e){!function(e,t){e.preventDefault();var n=e.clientX-oe.getBoundingClientRect().left;function r(e){e.preventDefault();var r=e.clientX-n-re.getBoundingClientRect().left;r<0&&(r=0);var o=re.offsetWidth;r>o&&(r=o),oe.style.left=r+"px",ne.style.width=r+"px";var c=r/re.offsetWidth*100;ee.value=Math.round(c),t&&t(r)}document.addEventListener("mousemove",r),document.addEventListener("mouseup",(function e(){document.removeEventListener("mousemove",r),document.removeEventListener("mouseup",e)})),oe.ondragstart=function(){return!1}}(e,O)})),P.addEventListener("submit",(function(e){e.preventDefault(),function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:u,r=new XMLHttpRequest,o="https://javascript.pages.academy/kekstagram";r.addEventListener("load",(function(){r.status===l?t():n("Запрос не удался: ".concat(r.statusText))})),r.addEventListener("error",(function(){u("Ошибка соединения")})),r.addEventListener("timeout",(function(){n("Сервер не отвеает в течение ".concat(r.timeout," мс"))})),r.timeout=1e4,r.open("POST",o),r.send(e)}(new FormData(P),(function(){c($),se(),P.reset()}))})),ee.setAttribute("value",0),Q.setAttribute("value","100"),c(Z);var de=document.querySelector(".img-upload"),fe=de.querySelector(".text__hashtags"),me=de.querySelector(".text__description");de.querySelector(".img-upload__submit").addEventListener("click",(function(){var e;!function(e){var t=e.value,n=t.match(/(#[^#\s]{1,19})/g),r=function(e,t){return e.test(t)};if(r(/(?<!\w)#(?!\w)/,t)?(e.setCustomValidity("Хеш-тег не может состоять только из одной решётки"),e.reportValidity(),e.style.outline="3px solid red"):r(/[^#\w\s]{1,}(?=.*)|((?<!#)(\b\w{1,19}\b ?){1,5})/,t)?(e.setCustomValidity("Хеш-тег начинается c решетшки"),e.reportValidity(),e.style.outline="3px solid red"):r(/(#\w{1,19}#\w*){1,5}/,t)?(e.setCustomValidity("Хэш-теги разделяются пробелами"),e.reportValidity(),e.style.outline="3px solid red"):r(/((?<=\s)#(?!\w))/,t)?(console.log("ssd"),e.setCustomValidity("Хеш-тег не может состоять только из одной решётки;"),e.reportValidity(),e.style.outline="3px solid red"):r(/(#[^#\s]{1,19} ?){6,}/,t)?(e.setCustomValidity("Нельзя указать больше пяти хэш-тегов"),e.reportValidity(),e.style.outline="3px solid red"):r(/(#[^#\s]{20,} ?)/,t)?(e.setCustomValidity("Максимальная длина одного хэш-тега может быть 20 символов, включая решётку"),e.reportValidity(),e.style.outline="3px solid red"):(e.setCustomValidity(""),e.reportValidity(),e.style.outline=""),n){var o,c=n.toString().toLowerCase().split(","),i=d(c);try{for(i.s();!(o=i.n()).done;){for(var l=o.value,a=0,u=0;u<c.length;u++)l===c[u]&&a++;a>1&&(e.setCustomValidity("Один и тот же хэш-тег не может быть использован дважды"),e.reportValidity(),e.style.outline="3px solid red")}}catch(e){i.e(e)}finally{i.f()}}}(fe),(e=me).validity.tooLong?(e.setCustomValidity("длина комментария не может составлять больше 140 символов"),e.style.outline="3px solid red"):(e.setCustomValidity(""),e.style.outline="")})),fe.addEventListener("keydown",(function(e){e.stopPropagation()})),me.addEventListener("keydown",(function(e){e.stopPropagation()}));var ve=document.querySelector("#filter-default"),ye=document.querySelector("#filter-random"),pe=document.querySelector("#filter-discussed"),_e=(document.querySelector(".pictures").querySelectorAll(".pictures"),document.querySelectorAll(".img-filters__button"));e.clickedFIlter="filter-default",pe.addEventListener("click",(function(t){e.clickedFIlter=t.target.id,j(),i(_e,pe),T(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:f["filter-default"],t=e.slice(),n=t.sort((function(e,t){return t.comments.length-e.comments.length}));return f["filter-discussed"]=n}())})),ve.addEventListener("click",(function(t){e.clickedFIlter=t.target.id,j(),i(_e,ve),T(f["filter-default"])}));var he,ge,Se,qe,Le=(he=function(t){e.clickedFIlter=t.target.id,j(),i(_e,ye),T(function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:f["filter-default"],t=[],r=function(){var e=n(25);t.some((function(t){return t===e}))||t.push(e)};t.length<10;)r();var o=t.map((function(t){return e[t]}));return f["filter-random"]=o}())},ge=300,Se=!0,function(){var e=this,t=arguments,n=function(){qe=null,Se||he.apply(e,t)},r=Se&&!qe;clearTimeout(qe),qe=setTimeout(n,ge),r&&he.apply(e,t)});ye.addEventListener("click",Le),a(T),a((function(e){return f["filter-default"]=e}))}({});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
